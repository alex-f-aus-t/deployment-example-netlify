generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "rhel-openssl-1.0.x"]
}

datasource db {
  provider = "mysql"
  url      = "mysql://root:sPOsZsfbcdonHLKqyOHz@containers-us-west-110.railway.app:7243/railway"
}

model admin_permissions {
  id                                                       Int                            @id @default(autoincrement()) @db.UnsignedInt
  action                                                   String?                        @db.VarChar(255)
  subject                                                  String?                        @db.VarChar(255)
  properties                                               Json?
  conditions                                               Json?
  created_at                                               DateTime?                      @db.DateTime(6)
  updated_at                                               DateTime?                      @db.DateTime(6)
  created_by_id                                            Int?                           @db.UnsignedInt
  updated_by_id                                            Int?                           @db.UnsignedInt
  admin_users_admin_permissions_created_by_idToadmin_users admin_users?                   @relation("admin_permissions_created_by_idToadmin_users", fields: [created_by_id], references: [id], onUpdate: NoAction, map: "admin_permissions_created_by_id_fk")
  admin_users_admin_permissions_updated_by_idToadmin_users admin_users?                   @relation("admin_permissions_updated_by_idToadmin_users", fields: [updated_by_id], references: [id], onUpdate: NoAction, map: "admin_permissions_updated_by_id_fk")
  admin_permissions_role_links                             admin_permissions_role_links[]

  @@index([created_by_id], map: "admin_permissions_created_by_id_fk")
  @@index([updated_by_id], map: "admin_permissions_updated_by_id_fk")
}

model admin_permissions_role_links {
  permission_id     Int?               @db.UnsignedInt
  role_id           Int?               @db.UnsignedInt
  id                Int                @id @default(autoincrement()) @db.UnsignedInt
  admin_permissions admin_permissions? @relation(fields: [permission_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "admin_permissions_role_links_fk")
  admin_roles       admin_roles?       @relation(fields: [role_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "admin_permissions_role_links_inv_fk")

  @@index([permission_id], map: "admin_permissions_role_links_fk")
  @@index([role_id], map: "admin_permissions_role_links_inv_fk")
}

model admin_roles {
  id                                                 Int                            @id @default(autoincrement()) @db.UnsignedInt
  name                                               String?                        @db.VarChar(255)
  code                                               String?                        @db.VarChar(255)
  description                                        String?                        @db.VarChar(255)
  created_at                                         DateTime?                      @db.DateTime(6)
  updated_at                                         DateTime?                      @db.DateTime(6)
  created_by_id                                      Int?                           @db.UnsignedInt
  updated_by_id                                      Int?                           @db.UnsignedInt
  admin_users_admin_roles_created_by_idToadmin_users admin_users?                   @relation("admin_roles_created_by_idToadmin_users", fields: [created_by_id], references: [id], onUpdate: NoAction, map: "admin_roles_created_by_id_fk")
  admin_users_admin_roles_updated_by_idToadmin_users admin_users?                   @relation("admin_roles_updated_by_idToadmin_users", fields: [updated_by_id], references: [id], onUpdate: NoAction, map: "admin_roles_updated_by_id_fk")
  admin_permissions_role_links                       admin_permissions_role_links[]
  admin_users_roles_links                            admin_users_roles_links[]

  @@index([created_by_id], map: "admin_roles_created_by_id_fk")
  @@index([updated_by_id], map: "admin_roles_updated_by_id_fk")
}

model admin_users {
  id                                                                                   Int                            @id @default(autoincrement()) @db.UnsignedInt
  firstname                                                                            String?                        @db.VarChar(255)
  lastname                                                                             String?                        @db.VarChar(255)
  username                                                                             String?                        @db.VarChar(255)
  email                                                                                String?                        @db.VarChar(255)
  password                                                                             String?                        @db.VarChar(255)
  reset_password_token                                                                 String?                        @db.VarChar(255)
  registration_token                                                                   String?                        @db.VarChar(255)
  is_active                                                                            Boolean?
  blocked                                                                              Boolean?
  prefered_language                                                                    String?                        @db.VarChar(255)
  created_at                                                                           DateTime?                      @db.DateTime(6)
  updated_at                                                                           DateTime?                      @db.DateTime(6)
  created_by_id                                                                        Int?                           @db.UnsignedInt
  updated_by_id                                                                        Int?                           @db.UnsignedInt
  admin_users_admin_usersToadmin_users_created_by_id                                   admin_users?                   @relation("admin_usersToadmin_users_created_by_id", fields: [created_by_id], references: [id], onUpdate: NoAction, map: "admin_users_created_by_id_fk")
  admin_users_admin_usersToadmin_users_updated_by_id                                   admin_users?                   @relation("admin_usersToadmin_users_updated_by_id", fields: [updated_by_id], references: [id], onUpdate: NoAction, map: "admin_users_updated_by_id_fk")
  admin_permissions_admin_permissions_created_by_idToadmin_users                       admin_permissions[]            @relation("admin_permissions_created_by_idToadmin_users")
  admin_permissions_admin_permissions_updated_by_idToadmin_users                       admin_permissions[]            @relation("admin_permissions_updated_by_idToadmin_users")
  admin_roles_admin_roles_created_by_idToadmin_users                                   admin_roles[]                  @relation("admin_roles_created_by_idToadmin_users")
  admin_roles_admin_roles_updated_by_idToadmin_users                                   admin_roles[]                  @relation("admin_roles_updated_by_idToadmin_users")
  other_admin_users_admin_usersToadmin_users_created_by_id                             admin_users[]                  @relation("admin_usersToadmin_users_created_by_id")
  other_admin_users_admin_usersToadmin_users_updated_by_id                             admin_users[]                  @relation("admin_usersToadmin_users_updated_by_id")
  admin_users_roles_links                                                              admin_users_roles_links[]
  ages_admin_usersToages_created_by_id                                                 ages[]                         @relation("admin_usersToages_created_by_id")
  ages_admin_usersToages_updated_by_id                                                 ages[]                         @relation("admin_usersToages_updated_by_id")
  categories_admin_usersTocategories_created_by_id                                     categories[]                   @relation("admin_usersTocategories_created_by_id")
  categories_admin_usersTocategories_updated_by_id                                     categories[]                   @relation("admin_usersTocategories_updated_by_id")
  files_admin_usersTofiles_created_by_id                                               files[]                        @relation("admin_usersTofiles_created_by_id")
  files_admin_usersTofiles_updated_by_id                                               files[]                        @relation("admin_usersTofiles_updated_by_id")
  goals_admin_usersTogoals_created_by_id                                               goals[]                        @relation("admin_usersTogoals_created_by_id")
  goals_admin_usersTogoals_updated_by_id                                               goals[]                        @relation("admin_usersTogoals_updated_by_id")
  i18n_locale_admin_usersToi18n_locale_created_by_id                                   i18n_locale[]                  @relation("admin_usersToi18n_locale_created_by_id")
  i18n_locale_admin_usersToi18n_locale_updated_by_id                                   i18n_locale[]                  @relation("admin_usersToi18n_locale_updated_by_id")
  menu_items_admin_usersTomenu_items_created_by_id                                     menu_items[]                   @relation("admin_usersTomenu_items_created_by_id")
  menu_items_admin_usersTomenu_items_updated_by_id                                     menu_items[]                   @relation("admin_usersTomenu_items_updated_by_id")
  menus_admin_usersTomenus_created_by_id                                               menus[]                        @relation("admin_usersTomenus_created_by_id")
  menus_admin_usersTomenus_updated_by_id                                               menus[]                        @relation("admin_usersTomenus_updated_by_id")
  strapi_api_token_permissions_admin_usersTostrapi_api_token_permissions_created_by_id strapi_api_token_permissions[] @relation("admin_usersTostrapi_api_token_permissions_created_by_id")
  strapi_api_token_permissions_admin_usersTostrapi_api_token_permissions_updated_by_id strapi_api_token_permissions[] @relation("admin_usersTostrapi_api_token_permissions_updated_by_id")
  strapi_api_tokens_admin_usersTostrapi_api_tokens_created_by_id                       strapi_api_tokens[]            @relation("admin_usersTostrapi_api_tokens_created_by_id")
  strapi_api_tokens_admin_usersTostrapi_api_tokens_updated_by_id                       strapi_api_tokens[]            @relation("admin_usersTostrapi_api_tokens_updated_by_id")
  tags_admin_usersTotags_created_by_id                                                 tags[]                         @relation("admin_usersTotags_created_by_id")
  tags_admin_usersTotags_updated_by_id                                                 tags[]                         @relation("admin_usersTotags_updated_by_id")
  training_equipments_admin_usersTotraining_equipments_created_by_id                   training_equipments[]          @relation("admin_usersTotraining_equipments_created_by_id")
  training_equipments_admin_usersTotraining_equipments_updated_by_id                   training_equipments[]          @relation("admin_usersTotraining_equipments_updated_by_id")
  up_permissions_admin_usersToup_permissions_created_by_id                             up_permissions[]               @relation("admin_usersToup_permissions_created_by_id")
  up_permissions_admin_usersToup_permissions_updated_by_id                             up_permissions[]               @relation("admin_usersToup_permissions_updated_by_id")
  up_roles_admin_usersToup_roles_created_by_id                                         up_roles[]                     @relation("admin_usersToup_roles_created_by_id")
  up_roles_admin_usersToup_roles_updated_by_id                                         up_roles[]                     @relation("admin_usersToup_roles_updated_by_id")
  up_users_admin_usersToup_users_created_by_id                                         up_users[]                     @relation("admin_usersToup_users_created_by_id")
  up_users_admin_usersToup_users_updated_by_id                                         up_users[]                     @relation("admin_usersToup_users_updated_by_id")
  upload_folders_admin_usersToupload_folders_created_by_id                             upload_folders[]               @relation("admin_usersToupload_folders_created_by_id")
  upload_folders_admin_usersToupload_folders_updated_by_id                             upload_folders[]               @relation("admin_usersToupload_folders_updated_by_id")
  workouts_admin_usersToworkouts_created_by_id                                         workouts[]                     @relation("admin_usersToworkouts_created_by_id")
  workouts_admin_usersToworkouts_updated_by_id                                         workouts[]                     @relation("admin_usersToworkouts_updated_by_id")

  @@index([created_by_id], map: "admin_users_created_by_id_fk")
  @@index([updated_by_id], map: "admin_users_updated_by_id_fk")
}

model admin_users_roles_links {
  user_id     Int?         @db.UnsignedInt
  role_id     Int?         @db.UnsignedInt
  id          Int          @id @default(autoincrement()) @db.UnsignedInt
  admin_users admin_users? @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "admin_users_roles_links_fk")
  admin_roles admin_roles? @relation(fields: [role_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "admin_users_roles_links_inv_fk")

  @@index([user_id], map: "admin_users_roles_links_fk")
  @@index([role_id], map: "admin_users_roles_links_inv_fk")
}

model ages {
  id                                          Int          @id @default(autoincrement()) @db.UnsignedInt
  title                                       String?      @db.VarChar(255)
  slug                                        String?      @unique(map: "ages_slug_unique") @db.VarChar(255)
  ages                                        String?      @db.VarChar(255)
  created_at                                  DateTime?    @db.DateTime(6)
  updated_at                                  DateTime?    @db.DateTime(6)
  created_by_id                               Int?         @db.UnsignedInt
  updated_by_id                               Int?         @db.UnsignedInt
  admin_users_admin_usersToages_created_by_id admin_users? @relation("admin_usersToages_created_by_id", fields: [created_by_id], references: [id], onUpdate: NoAction, map: "ages_created_by_id_fk")
  admin_users_admin_usersToages_updated_by_id admin_users? @relation("admin_usersToages_updated_by_id", fields: [updated_by_id], references: [id], onUpdate: NoAction, map: "ages_updated_by_id_fk")

  @@index([created_by_id], map: "ages_created_by_id_fk")
  @@index([updated_by_id], map: "ages_updated_by_id_fk")
}

model categories {
  id                                                Int          @id @default(autoincrement()) @db.UnsignedInt
  title                                             String?      @db.VarChar(255)
  slug                                              String?      @unique(map: "categories_slug_unique") @db.VarChar(255)
  description                                       String?      @db.LongText
  created_at                                        DateTime?    @db.DateTime(6)
  updated_at                                        DateTime?    @db.DateTime(6)
  created_by_id                                     Int?         @db.UnsignedInt
  updated_by_id                                     Int?         @db.UnsignedInt
  admin_users_admin_usersTocategories_created_by_id admin_users? @relation("admin_usersTocategories_created_by_id", fields: [created_by_id], references: [id], onUpdate: NoAction, map: "categories_created_by_id_fk")
  admin_users_admin_usersTocategories_updated_by_id admin_users? @relation("admin_usersTocategories_updated_by_id", fields: [updated_by_id], references: [id], onUpdate: NoAction, map: "categories_updated_by_id_fk")

  @@index([created_by_id], map: "categories_created_by_id_fk")
  @@index([updated_by_id], map: "categories_updated_by_id_fk")
}

model components_content_types_characteristics {
  id    Int     @id @default(autoincrement()) @db.UnsignedInt
  title String? @db.VarChar(255)
}

model components_content_types_units {
  id        Int     @id @default(autoincrement()) @db.UnsignedInt
  title     String? @db.VarChar(255)
  intro     String? @db.LongText
  video_url String? @db.VarChar(255)
}

model components_payment_stripes {
  id                Int     @id @default(autoincrement()) @db.UnsignedInt
  stripe_price_id   String? @db.VarChar(255)
  stripe_product_id String? @db.VarChar(255)
}

model files {
  id                                           Int                    @id @default(autoincrement()) @db.UnsignedInt
  name                                         String?                @db.VarChar(255)
  alternative_text                             String?                @db.VarChar(255)
  caption                                      String?                @db.VarChar(255)
  width                                        Int?
  height                                       Int?
  formats                                      Json?
  hash                                         String?                @db.VarChar(255)
  ext                                          String?                @db.VarChar(255)
  mime                                         String?                @db.VarChar(255)
  size                                         Decimal?               @db.Decimal(10, 2)
  url                                          String?                @db.VarChar(255)
  preview_url                                  String?                @db.VarChar(255)
  provider                                     String?                @db.VarChar(255)
  provider_metadata                            Json?
  created_at                                   DateTime?              @db.DateTime(6)
  updated_at                                   DateTime?              @db.DateTime(6)
  created_by_id                                Int?                   @db.UnsignedInt
  updated_by_id                                Int?                   @db.UnsignedInt
  folder_path                                  String?                @db.VarChar(255)
  admin_users_admin_usersTofiles_created_by_id admin_users?           @relation("admin_usersTofiles_created_by_id", fields: [created_by_id], references: [id], onUpdate: NoAction, map: "files_created_by_id_fk")
  admin_users_admin_usersTofiles_updated_by_id admin_users?           @relation("admin_usersTofiles_updated_by_id", fields: [updated_by_id], references: [id], onUpdate: NoAction, map: "files_updated_by_id_fk")
  files_folder_links                           files_folder_links[]
  files_related_morphs                         files_related_morphs[]

  @@index([created_by_id], map: "files_created_by_id_fk")
  @@index([updated_by_id], map: "files_updated_by_id_fk")
  @@index([folder_path], map: "upload_files_folder_path_index")
}

model files_folder_links {
  id             Int             @id @default(autoincrement()) @db.UnsignedInt
  file_id        Int?            @db.UnsignedInt
  folder_id      Int?            @db.UnsignedInt
  files          files?          @relation(fields: [file_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "files_folder_links_fk")
  upload_folders upload_folders? @relation(fields: [folder_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "files_folder_links_inv_fk")

  @@index([file_id], map: "files_folder_links_fk")
  @@index([folder_id], map: "files_folder_links_inv_fk")
}

model files_related_morphs {
  file_id      Int?    @db.UnsignedInt
  related_id   Int?    @db.UnsignedInt
  related_type String? @db.VarChar(255)
  field        String? @db.VarChar(255)
  order        Int?    @db.UnsignedInt
  id           Int     @id @default(autoincrement()) @db.UnsignedInt
  files        files?  @relation(fields: [file_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "files_related_morphs_fk")

  @@index([file_id], map: "files_related_morphs_fk")
}

model goals {
  id                                           Int          @id @default(autoincrement()) @db.UnsignedInt
  slug                                         String?      @unique(map: "goals_slug_unique") @db.VarChar(255)
  goal                                         String?      @db.VarChar(255)
  created_at                                   DateTime?    @db.DateTime(6)
  updated_at                                   DateTime?    @db.DateTime(6)
  created_by_id                                Int?         @db.UnsignedInt
  updated_by_id                                Int?         @db.UnsignedInt
  admin_users_admin_usersTogoals_created_by_id admin_users? @relation("admin_usersTogoals_created_by_id", fields: [created_by_id], references: [id], onUpdate: NoAction, map: "goals_created_by_id_fk")
  admin_users_admin_usersTogoals_updated_by_id admin_users? @relation("admin_usersTogoals_updated_by_id", fields: [updated_by_id], references: [id], onUpdate: NoAction, map: "goals_updated_by_id_fk")

  @@index([created_by_id], map: "goals_created_by_id_fk")
  @@index([updated_by_id], map: "goals_updated_by_id_fk")
}

model i18n_locale {
  id                                                 Int          @id @default(autoincrement()) @db.UnsignedInt
  name                                               String?      @db.VarChar(255)
  code                                               String?      @db.VarChar(255)
  created_at                                         DateTime?    @db.DateTime(6)
  updated_at                                         DateTime?    @db.DateTime(6)
  created_by_id                                      Int?         @db.UnsignedInt
  updated_by_id                                      Int?         @db.UnsignedInt
  admin_users_admin_usersToi18n_locale_created_by_id admin_users? @relation("admin_usersToi18n_locale_created_by_id", fields: [created_by_id], references: [id], onUpdate: NoAction, map: "i18n_locale_created_by_id_fk")
  admin_users_admin_usersToi18n_locale_updated_by_id admin_users? @relation("admin_usersToi18n_locale_updated_by_id", fields: [updated_by_id], references: [id], onUpdate: NoAction, map: "i18n_locale_updated_by_id_fk")

  @@index([created_by_id], map: "i18n_locale_created_by_id_fk")
  @@index([updated_by_id], map: "i18n_locale_updated_by_id_fk")
}

model menu_items {
  id                                                                           Int                          @id @default(autoincrement()) @db.UnsignedInt
  order                                                                        Int?
  title                                                                        String?                      @db.VarChar(255)
  url                                                                          String?                      @db.VarChar(255)
  target                                                                       String?                      @db.VarChar(255)
  created_at                                                                   DateTime?                    @db.DateTime(6)
  updated_at                                                                   DateTime?                    @db.DateTime(6)
  created_by_id                                                                Int?                         @db.UnsignedInt
  updated_by_id                                                                Int?                         @db.UnsignedInt
  admin_users_admin_usersTomenu_items_created_by_id                            admin_users?                 @relation("admin_usersTomenu_items_created_by_id", fields: [created_by_id], references: [id], onUpdate: NoAction, map: "menu_items_created_by_id_fk")
  admin_users_admin_usersTomenu_items_updated_by_id                            admin_users?                 @relation("admin_usersTomenu_items_updated_by_id", fields: [updated_by_id], references: [id], onUpdate: NoAction, map: "menu_items_updated_by_id_fk")
  menu_items_parent_links_menu_itemsTomenu_items_parent_links_menu_item_id     menu_items_parent_links[]    @relation("menu_itemsTomenu_items_parent_links_menu_item_id")
  menu_items_parent_links_menu_itemsTomenu_items_parent_links_inv_menu_item_id menu_items_parent_links[]    @relation("menu_itemsTomenu_items_parent_links_inv_menu_item_id")
  menu_items_root_menu_links                                                   menu_items_root_menu_links[]

  @@index([created_by_id], map: "menu_items_created_by_id_fk")
  @@index([updated_by_id], map: "menu_items_updated_by_id_fk")
}

model menu_items_parent_links {
  menu_item_id                                                    Int?        @db.UnsignedInt
  inv_menu_item_id                                                Int?        @db.UnsignedInt
  id                                                              Int         @id @default(autoincrement()) @db.UnsignedInt
  menu_items_menu_itemsTomenu_items_parent_links_menu_item_id     menu_items? @relation("menu_itemsTomenu_items_parent_links_menu_item_id", fields: [menu_item_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "menu_items_parent_links_fk")
  menu_items_menu_itemsTomenu_items_parent_links_inv_menu_item_id menu_items? @relation("menu_itemsTomenu_items_parent_links_inv_menu_item_id", fields: [inv_menu_item_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "menu_items_parent_links_inv_fk")

  @@index([menu_item_id], map: "menu_items_parent_links_fk")
  @@index([inv_menu_item_id], map: "menu_items_parent_links_inv_fk")
}

model menu_items_root_menu_links {
  menu_item_id Int?        @db.UnsignedInt
  menu_id      Int?        @db.UnsignedInt
  id           Int         @id @default(autoincrement()) @db.UnsignedInt
  menu_items   menu_items? @relation(fields: [menu_item_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "menu_items_root_menu_links_fk")
  menus        menus?      @relation(fields: [menu_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "menu_items_root_menu_links_inv_fk")

  @@index([menu_item_id], map: "menu_items_root_menu_links_fk")
  @@index([menu_id], map: "menu_items_root_menu_links_inv_fk")
}

model menus {
  id                                           Int                          @id @default(autoincrement()) @db.UnsignedInt
  title                                        String?                      @db.VarChar(255)
  slug                                         String?                      @unique(map: "menus_slug_unique") @db.VarChar(255)
  created_at                                   DateTime?                    @db.DateTime(6)
  updated_at                                   DateTime?                    @db.DateTime(6)
  created_by_id                                Int?                         @db.UnsignedInt
  updated_by_id                                Int?                         @db.UnsignedInt
  admin_users_admin_usersTomenus_created_by_id admin_users?                 @relation("admin_usersTomenus_created_by_id", fields: [created_by_id], references: [id], onUpdate: NoAction, map: "menus_created_by_id_fk")
  admin_users_admin_usersTomenus_updated_by_id admin_users?                 @relation("admin_usersTomenus_updated_by_id", fields: [updated_by_id], references: [id], onUpdate: NoAction, map: "menus_updated_by_id_fk")
  menu_items_root_menu_links                   menu_items_root_menu_links[]

  @@index([created_by_id], map: "menus_created_by_id_fk")
  @@index([updated_by_id], map: "menus_updated_by_id_fk")
}

model my_user {
  user_id    Int     @id @default(autoincrement())
  first_name String?
  last_name  String  @unique
}

model strapi_api_token_permissions {
  id                                                                  Int                                        @id @default(autoincrement()) @db.UnsignedInt
  action                                                              String?                                    @db.VarChar(255)
  created_at                                                          DateTime?                                  @db.DateTime(6)
  updated_at                                                          DateTime?                                  @db.DateTime(6)
  created_by_id                                                       Int?                                       @db.UnsignedInt
  updated_by_id                                                       Int?                                       @db.UnsignedInt
  admin_users_admin_usersTostrapi_api_token_permissions_created_by_id admin_users?                               @relation("admin_usersTostrapi_api_token_permissions_created_by_id", fields: [created_by_id], references: [id], onUpdate: NoAction, map: "strapi_api_token_permissions_created_by_id_fk")
  admin_users_admin_usersTostrapi_api_token_permissions_updated_by_id admin_users?                               @relation("admin_usersTostrapi_api_token_permissions_updated_by_id", fields: [updated_by_id], references: [id], onUpdate: NoAction, map: "strapi_api_token_permissions_updated_by_id_fk")
  strapi_api_token_permissions_token_links                            strapi_api_token_permissions_token_links[]

  @@index([created_by_id], map: "strapi_api_token_permissions_created_by_id_fk")
  @@index([updated_by_id], map: "strapi_api_token_permissions_updated_by_id_fk")
}

model strapi_api_token_permissions_token_links {
  id                           Int                           @id @default(autoincrement()) @db.UnsignedInt
  api_token_permission_id      Int?                          @db.UnsignedInt
  api_token_id                 Int?                          @db.UnsignedInt
  strapi_api_token_permissions strapi_api_token_permissions? @relation(fields: [api_token_permission_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "strapi_api_token_permissions_token_links_fk")
  strapi_api_tokens            strapi_api_tokens?            @relation(fields: [api_token_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "strapi_api_token_permissions_token_links_inv_fk")

  @@index([api_token_permission_id], map: "strapi_api_token_permissions_token_links_fk")
  @@index([api_token_id], map: "strapi_api_token_permissions_token_links_inv_fk")
}

model strapi_api_tokens {
  id                                                       Int                                        @id @default(autoincrement()) @db.UnsignedInt
  name                                                     String?                                    @db.VarChar(255)
  description                                              String?                                    @db.VarChar(255)
  type                                                     String?                                    @db.VarChar(255)
  access_key                                               String?                                    @db.VarChar(255)
  created_at                                               DateTime?                                  @db.DateTime(6)
  updated_at                                               DateTime?                                  @db.DateTime(6)
  created_by_id                                            Int?                                       @db.UnsignedInt
  updated_by_id                                            Int?                                       @db.UnsignedInt
  last_used_at                                             DateTime?                                  @db.DateTime(6)
  expires_at                                               DateTime?                                  @db.DateTime(6)
  lifespan                                                 Int?
  admin_users_admin_usersTostrapi_api_tokens_created_by_id admin_users?                               @relation("admin_usersTostrapi_api_tokens_created_by_id", fields: [created_by_id], references: [id], onUpdate: NoAction, map: "strapi_api_tokens_created_by_id_fk")
  admin_users_admin_usersTostrapi_api_tokens_updated_by_id admin_users?                               @relation("admin_usersTostrapi_api_tokens_updated_by_id", fields: [updated_by_id], references: [id], onUpdate: NoAction, map: "strapi_api_tokens_updated_by_id_fk")
  strapi_api_token_permissions_token_links                 strapi_api_token_permissions_token_links[]

  @@index([created_by_id], map: "strapi_api_tokens_created_by_id_fk")
  @@index([updated_by_id], map: "strapi_api_tokens_updated_by_id_fk")
}

model strapi_core_store_settings {
  id          Int     @id @default(autoincrement()) @db.UnsignedInt
  key         String? @db.VarChar(255)
  value       String? @db.LongText
  type        String? @db.VarChar(255)
  environment String? @db.VarChar(255)
  tag         String? @db.VarChar(255)
}

model strapi_database_schema {
  id     Int       @id @default(autoincrement()) @db.UnsignedInt
  schema Json?
  time   DateTime? @db.DateTime(0)
  hash   String?   @db.VarChar(255)
}

model strapi_migrations {
  id   Int       @id @default(autoincrement()) @db.UnsignedInt
  name String?   @db.VarChar(255)
  time DateTime? @db.DateTime(0)
}

model strapi_webhooks {
  id      Int      @id @default(autoincrement()) @db.UnsignedInt
  name    String?  @db.VarChar(255)
  url     String?  @db.LongText
  headers Json?
  events  Json?
  enabled Boolean?
}

model tags {
  id                                          Int          @id @default(autoincrement()) @db.UnsignedInt
  title                                       String?      @db.VarChar(255)
  slug                                        String?      @unique(map: "tags_slug_unique") @db.VarChar(255)
  created_at                                  DateTime?    @db.DateTime(6)
  updated_at                                  DateTime?    @db.DateTime(6)
  created_by_id                               Int?         @db.UnsignedInt
  updated_by_id                               Int?         @db.UnsignedInt
  admin_users_admin_usersTotags_created_by_id admin_users? @relation("admin_usersTotags_created_by_id", fields: [created_by_id], references: [id], onUpdate: NoAction, map: "tags_created_by_id_fk")
  admin_users_admin_usersTotags_updated_by_id admin_users? @relation("admin_usersTotags_updated_by_id", fields: [updated_by_id], references: [id], onUpdate: NoAction, map: "tags_updated_by_id_fk")

  @@index([created_by_id], map: "tags_created_by_id_fk")
  @@index([updated_by_id], map: "tags_updated_by_id_fk")
}

model training_equipments {
  id                                                         Int          @id @default(autoincrement()) @db.UnsignedInt
  title                                                      String?      @db.VarChar(255)
  slug                                                       String?      @unique(map: "training_equipments_slug_unique") @db.VarChar(255)
  created_at                                                 DateTime?    @db.DateTime(6)
  updated_at                                                 DateTime?    @db.DateTime(6)
  created_by_id                                              Int?         @db.UnsignedInt
  updated_by_id                                              Int?         @db.UnsignedInt
  admin_users_admin_usersTotraining_equipments_created_by_id admin_users? @relation("admin_usersTotraining_equipments_created_by_id", fields: [created_by_id], references: [id], onUpdate: NoAction, map: "training_equipments_created_by_id_fk")
  admin_users_admin_usersTotraining_equipments_updated_by_id admin_users? @relation("admin_usersTotraining_equipments_updated_by_id", fields: [updated_by_id], references: [id], onUpdate: NoAction, map: "training_equipments_updated_by_id_fk")

  @@index([created_by_id], map: "training_equipments_created_by_id_fk")
  @@index([updated_by_id], map: "training_equipments_updated_by_id_fk")
}

model up_permissions {
  id                                                    Int                         @id @default(autoincrement()) @db.UnsignedInt
  action                                                String?                     @db.VarChar(255)
  created_at                                            DateTime?                   @db.DateTime(6)
  updated_at                                            DateTime?                   @db.DateTime(6)
  created_by_id                                         Int?                        @db.UnsignedInt
  updated_by_id                                         Int?                        @db.UnsignedInt
  admin_users_admin_usersToup_permissions_created_by_id admin_users?                @relation("admin_usersToup_permissions_created_by_id", fields: [created_by_id], references: [id], onUpdate: NoAction, map: "up_permissions_created_by_id_fk")
  admin_users_admin_usersToup_permissions_updated_by_id admin_users?                @relation("admin_usersToup_permissions_updated_by_id", fields: [updated_by_id], references: [id], onUpdate: NoAction, map: "up_permissions_updated_by_id_fk")
  up_permissions_role_links                             up_permissions_role_links[]

  @@index([created_by_id], map: "up_permissions_created_by_id_fk")
  @@index([updated_by_id], map: "up_permissions_updated_by_id_fk")
}

model up_permissions_role_links {
  permission_id  Int?            @db.UnsignedInt
  role_id        Int?            @db.UnsignedInt
  id             Int             @id @default(autoincrement()) @db.UnsignedInt
  up_permissions up_permissions? @relation(fields: [permission_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "up_permissions_role_links_fk")
  up_roles       up_roles?       @relation(fields: [role_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "up_permissions_role_links_inv_fk")

  @@index([permission_id], map: "up_permissions_role_links_fk")
  @@index([role_id], map: "up_permissions_role_links_inv_fk")
}

model up_roles {
  id                                              Int                         @id @default(autoincrement()) @db.UnsignedInt
  name                                            String?                     @db.VarChar(255)
  description                                     String?                     @db.VarChar(255)
  type                                            String?                     @db.VarChar(255)
  created_at                                      DateTime?                   @db.DateTime(6)
  updated_at                                      DateTime?                   @db.DateTime(6)
  created_by_id                                   Int?                        @db.UnsignedInt
  updated_by_id                                   Int?                        @db.UnsignedInt
  admin_users_admin_usersToup_roles_created_by_id admin_users?                @relation("admin_usersToup_roles_created_by_id", fields: [created_by_id], references: [id], onUpdate: NoAction, map: "up_roles_created_by_id_fk")
  admin_users_admin_usersToup_roles_updated_by_id admin_users?                @relation("admin_usersToup_roles_updated_by_id", fields: [updated_by_id], references: [id], onUpdate: NoAction, map: "up_roles_updated_by_id_fk")
  up_permissions_role_links                       up_permissions_role_links[]
  up_users_role_links                             up_users_role_links[]

  @@index([created_by_id], map: "up_roles_created_by_id_fk")
  @@index([updated_by_id], map: "up_roles_updated_by_id_fk")
}

model up_users {
  id                                              Int                   @id @default(autoincrement()) @db.UnsignedInt
  username                                        String?               @db.VarChar(255)
  email                                           String?               @db.VarChar(255)
  provider                                        String?               @db.VarChar(255)
  password                                        String?               @db.VarChar(255)
  reset_password_token                            String?               @db.VarChar(255)
  confirmation_token                              String?               @db.VarChar(255)
  confirmed                                       Boolean?
  blocked                                         Boolean?
  created_at                                      DateTime?             @db.DateTime(6)
  updated_at                                      DateTime?             @db.DateTime(6)
  created_by_id                                   Int?                  @db.UnsignedInt
  updated_by_id                                   Int?                  @db.UnsignedInt
  admin_users_admin_usersToup_users_created_by_id admin_users?          @relation("admin_usersToup_users_created_by_id", fields: [created_by_id], references: [id], onUpdate: NoAction, map: "up_users_created_by_id_fk")
  admin_users_admin_usersToup_users_updated_by_id admin_users?          @relation("admin_usersToup_users_updated_by_id", fields: [updated_by_id], references: [id], onUpdate: NoAction, map: "up_users_updated_by_id_fk")
  up_users_role_links                             up_users_role_links[]

  @@index([created_by_id], map: "up_users_created_by_id_fk")
  @@index([updated_by_id], map: "up_users_updated_by_id_fk")
}

model up_users_role_links {
  user_id  Int?      @db.UnsignedInt
  role_id  Int?      @db.UnsignedInt
  id       Int       @id @default(autoincrement()) @db.UnsignedInt
  up_users up_users? @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "up_users_role_links_fk")
  up_roles up_roles? @relation(fields: [role_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "up_users_role_links_inv_fk")

  @@index([user_id], map: "up_users_role_links_fk")
  @@index([role_id], map: "up_users_role_links_inv_fk")
}

model upload_folders {
  id                                                                                    Int                           @id @default(autoincrement()) @db.UnsignedInt
  name                                                                                  String?                       @db.VarChar(255)
  path_id                                                                               Int?                          @unique(map: "upload_folders_path_id_index")
  path                                                                                  String?                       @unique(map: "upload_folders_path_index") @db.VarChar(255)
  created_at                                                                            DateTime?                     @db.DateTime(6)
  updated_at                                                                            DateTime?                     @db.DateTime(6)
  created_by_id                                                                         Int?                          @db.UnsignedInt
  updated_by_id                                                                         Int?                          @db.UnsignedInt
  admin_users_admin_usersToupload_folders_created_by_id                                 admin_users?                  @relation("admin_usersToupload_folders_created_by_id", fields: [created_by_id], references: [id], onUpdate: NoAction, map: "upload_folders_created_by_id_fk")
  admin_users_admin_usersToupload_folders_updated_by_id                                 admin_users?                  @relation("admin_usersToupload_folders_updated_by_id", fields: [updated_by_id], references: [id], onUpdate: NoAction, map: "upload_folders_updated_by_id_fk")
  files_folder_links                                                                    files_folder_links[]
  upload_folders_parent_links_upload_foldersToupload_folders_parent_links_folder_id     upload_folders_parent_links[] @relation("upload_foldersToupload_folders_parent_links_folder_id")
  upload_folders_parent_links_upload_foldersToupload_folders_parent_links_inv_folder_id upload_folders_parent_links[] @relation("upload_foldersToupload_folders_parent_links_inv_folder_id")

  @@index([created_by_id], map: "upload_folders_created_by_id_fk")
  @@index([updated_by_id], map: "upload_folders_updated_by_id_fk")
}

model upload_folders_parent_links {
  id                                                                       Int             @id @default(autoincrement()) @db.UnsignedInt
  folder_id                                                                Int?            @db.UnsignedInt
  inv_folder_id                                                            Int?            @db.UnsignedInt
  upload_folders_upload_foldersToupload_folders_parent_links_folder_id     upload_folders? @relation("upload_foldersToupload_folders_parent_links_folder_id", fields: [folder_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "upload_folders_parent_links_fk")
  upload_folders_upload_foldersToupload_folders_parent_links_inv_folder_id upload_folders? @relation("upload_foldersToupload_folders_parent_links_inv_folder_id", fields: [inv_folder_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "upload_folders_parent_links_inv_fk")

  @@index([folder_id], map: "upload_folders_parent_links_fk")
  @@index([inv_folder_id], map: "upload_folders_parent_links_inv_fk")
}

model video_views {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now()) @db.Timestamp(6)
  userId    Int      @db.UnsignedInt
  videoId   Int      @db.UnsignedInt
}

model workouts {
  id                                              Int                   @id @default(autoincrement()) @db.UnsignedInt
  title                                           String?               @db.VarChar(255)
  slug                                            String?               @unique(map: "workouts_slug_unique") @db.VarChar(255)
  intro                                           String?               @db.LongText
  product_id                                      BigInt?
  project_id                                      BigInt?
  description                                     String?               @db.LongText
  created_at                                      DateTime?             @db.DateTime(6)
  updated_at                                      DateTime?             @db.DateTime(6)
  published_at                                    DateTime?             @db.DateTime(6)
  created_by_id                                   Int?                  @db.UnsignedInt
  updated_by_id                                   Int?                  @db.UnsignedInt
  admin_users_admin_usersToworkouts_created_by_id admin_users?          @relation("admin_usersToworkouts_created_by_id", fields: [created_by_id], references: [id], onUpdate: NoAction, map: "workouts_created_by_id_fk")
  admin_users_admin_usersToworkouts_updated_by_id admin_users?          @relation("admin_usersToworkouts_updated_by_id", fields: [updated_by_id], references: [id], onUpdate: NoAction, map: "workouts_updated_by_id_fk")
  workouts_components                             workouts_components[]

  @@index([created_by_id], map: "workouts_created_by_id_fk")
  @@index([updated_by_id], map: "workouts_updated_by_id_fk")
}

model workouts_components {
  id             Int       @id @default(autoincrement()) @db.UnsignedInt
  entity_id      Int?      @db.UnsignedInt
  component_id   Int?      @db.UnsignedInt
  component_type String?   @db.VarChar(255)
  field          String?   @db.VarChar(255)
  order          Int?      @default(0) @db.UnsignedInt
  workouts       workouts? @relation(fields: [entity_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "workouts_entity_fk")

  @@index([component_type], map: "workouts_component_type_index")
  @@index([entity_id], map: "workouts_entity_fk")
  @@index([field], map: "workouts_field_index")
}
